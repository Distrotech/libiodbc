{"name":"Iodbc","tagline":"An open-source ODBC driver manager and SDK that facilitates the development of database-independent applications on linux, freebsd, unix and MacOS X platforms.","body":"iODBC Driver Manager\r\nCopyright (C) 1995 by Ke Jin <kejin@empress.com>\r\nCopyright (C) 1996-2013 by OpenLink Software <iodbc@openlinksw.com>\r\nAll Rights Reserved.\r\n\r\n\r\n1. Introduction\r\n\r\n   Welcome to the iODBC driver manager maintained by OpenLink Software\r\n   (<http://www.openlinksw.com/>). This kit will provide you with\r\n   everything you need in order to develop ODBC-compliant applications\r\n   under Unix without having to pay royalties to other parties.\r\n\r\n   This kit consists of a number of parts:\r\n\r\n   o  The iODBC driver manager. This is a complete implementation of\r\n      an ODBC driver manager, released under either the GNU Library\r\n      General Public License or the BSD License. We fully comply with\r\n      these licenses by giving you this product in source form (as well\r\n      as the binary form). You can download the latest version of the\r\n      driver manager from <http://www.iodbc.org/>\r\n\r\n   o  A simple example, iodbctest.c, which gives you a command-line\r\n      interface to SQL. You can fit this to your purposes, but at the very\r\n      least this is useful for verification of your ODBC installation.\r\n\r\n   You can use either part stand-alone, if you wish.\r\n\r\n   An ODBC driver is still needed to affect your connection\r\n   architecture. You may build a driver with the iODBC components or\r\n   obtain an ODBC driver from a commercial vendor. OpenLink Software\r\n   produces cross-platform commercial drivers as well as maintaining\r\n   the iODBC distribution: evaluation copies may be obtained via\r\n   download from <http://www.openlinksw.com/>. Any ODBC-compliant\r\n   driver will work with the iODBC Driver Manager.\r\n\r\n   See also the iODBC website, <http://www.iodbc.org/>, for more pointers\r\n   to various ODBC drivers.\r\n\r\n\r\n\r\n2. Installation of run-time distribution\r\n\r\n   You probably already unpacked this distribution. The next step is\r\n   to make sure that your applications can find all the dynamic link\r\n   libraries. Depending on your system's implementation of dynamic link\r\n   libraries, you have a number of options:\r\n\r\n   o  Install the libraries in a directory that is searched by your\r\n      linker by default. Typical locations are /usr/lib and\r\n      /usr/local/lib.\r\n\r\n   o  Install the libraries in some other place, and make sure that the\r\n      environment variable your dynamic linker uses to find extra\r\n      locations for dynamic link libraries. Most systems use the\r\n      environment variable LD_LIBRARY_PATH to this end. Exceptions are\r\n      AIX which uses LIBPATH and HP/UX which uses SHLIB_PATH.\r\n\r\n      If your system has a C compiler, you can verify the installation\r\n      by compiling the iodbctest program. Otherwise, you may have ODBC\r\n      applications installed on your system which you can use.\r\n\r\n\r\n\r\n3. Configuration of run-time distribution\r\n\r\n   The iODBC driver manager looks for a file ~/.odbc.ini, where the\r\n   tilde stands for the user's home directory. This file only contains a\r\n   default section where you can select which driver library to use. Copy\r\n   the odbc.ini file from the examples directory to ~/.odbc.ini and make\r\n   sure the right path and filename is used for your installation.\r\n\r\n   A data source is a section (enclosed in square parenthesis), and\r\n   the attributes for a data source are given within this section.\r\n   The most important attribute to iODBC for each datasource is the Driver\r\n   attribute. This must point to the shared library for the ODBC driver\r\n   associated with the data source.\r\n\r\n   As example, the OpenLink ODBC drivers have a number of attributes\r\n   which can be set for a data source. Here is a description (with ODBC\r\n   connect string tags between parenthesis):\r\n\r\n     Host\r\n        The hostname where the database resides (HOST).\r\n\r\n     ServerType\r\n        The type of server (see oplrqb.ini on the server, SVT).\r\n\r\n     ServerOptions\r\n        Server-specific extra options. See OpenLink server documentation\r\n        for agents which can use this.\r\n\r\n     Database\r\n        The database to use (DATABASE).\r\n\r\n     Options\r\n        Connect options for the database (OPTIONS).\r\n\r\n     UserName\r\n        The name of the user (a password cannot be specified in the\r\n        UDBCINI file, UID/PWD).\r\n\r\n     ReadOnly\r\n        A Yes/No value in order to make the connection read-only\r\n        (READONLY=Y/N).\r\n\r\n     FetchBufferSize\r\n        The number of records that are transferred in a single call to\r\n        the server. Default is 5; maximum is 99, minimum is 1\r\n        (FBS=value).\r\n\r\n     Protocol\r\n        The protocol to use. Leave set to ``TCP'' for this release.\r\n\r\n\r\n   Apart from these data source-specific settings, you may add a section\r\n   called [Communications], which you may use to tune our driver further:\r\n\r\n     ReceiveTimeout\r\n        The time the client application will wait for the database agent\r\n        to finish the request (default is 60 seconds).\r\n\r\n     BrokerTimeout\r\n        The time the client application will wait for the request broker\r\n        to accept of reject a database connection (default is 30\r\n        seconds).\r\n\r\n     SendSize\r\n        RPC send buffer size. A value of 0 (the default) will cause the\r\n        application to use system-dependent defaults.\r\n\r\n     ReceiveSize\r\n        RPC receive buffer size. A value of 0 (the default) will cause\r\n        the application to use system-dependent defaults.\r\n\r\n     DebugFile\r\n        If set, the name of a file to which debugging output from the\r\n        driver should be directed.\r\n\r\n\r\n\r\n4. Contribution of changes, patches and updates.\r\n\r\n   While not mandated by the BSD license, any patches you make to\r\n   the iODBC may be contributed back into the iODBC project at\r\n   your discretion. Contributions will benefit the Open Source and\r\n   Data Access community as a whole. Submissions may be made at\r\n   <http://www.iodbc.org/>.\r\n\r\n\r\n\r\n5. iODBC driver manager platform availability\r\n\r\n   The iODBC driver manager has been ported to following Unix platforms:\r\n\r\n\tBSDi BSD/OS \t2.x\t\t?\r\n\tDEC Unix(OSF/1)\t3.x - 5.x\tDEC Alpha\r\n\tDG/UX\t\t5.x\t\tAviion\r\n\tFreeBSD\t\t2.x - 5.x\tx86\r\n\tHP/UX\t\t9.x - 11.x\tHP9000 s700/s800\r\n\tHP/UX\t\t9.x \t\tHP9000 s300/s400\r\n\tIBM AIX\t\t3.x - 5.x \tIBM RS6000, PowerPC\r\n\tLinux ELF \t1.x,  2.x\tx86, Itanium, PowerPC\r\n\tMac OS X\t10.x\t\tPowerPC\r\n\tMax/OS SVR4\t1.x\t\tConcurrent Maxion 9200 MP\r\n\tNCR SVR4 \t3.x\t\tNCR 3435\r\n\tOpenVMS\t\t6.x\t\tDEC Alpha\r\n\tSCO OpenServer \t5.x \t\tx86\r\n\tSGI Irix SVR4\t5.x, 6.x\tIP12 MIPS, IP22 MIPS\r\n\tSunOS\t\t4.1.x\t\tSun Sparc\r\n\tSun Solaris\t2.x\t\tSun Sparc, PCx86\r\n\tUnixWare SVR4.2 1.x, 2.x\tx86\r\n\tWindows NT\t4.x\t\tx86\r\n\r\n    As the iODBC driver manager uses autoconf/automake/libtool it should\r\n    be portable to most modern UNIX platforms out of the box. However if\r\n    you do need to make changes to the code or the configuration files,\r\n    we would appreciate you share your changes with the rest of the\r\n    internet community by mailing your patches to <iodbc@openlinksw.com>\r\n    so we can include them for the next build.\r\n\r\n    Porting of iODBC driver manager to some non-UNIX operating systems\r\n    such as Windows family(3.x, 95, NT), OS/2 and Mac Classic is\r\n    supported but has not been compiled and tested recently. Of cause,\r\n    you need to supply a make/build file and a short LibMain for creating\r\n    the iodbc.dll.\r\n\r\n\r\n\r\n6. How to build iODBC driver manager:\r\n\r\n    Mac OS X users should read the separate README.MACOSX document for\r\n    more detail of porting on this platform. Otherwise:\r\n\r\n    step 1. Run configure to adjust to target platform\r\n    step 2. Run make\r\n    step 3. Run make install\r\n\r\n    The configure program will examine your system for various compiler\r\n    flags, system options etc. In some cases extra flags need to be\r\n    added for the C compiler to work properly.\r\n\r\n    E.g. on HP systems you may need:\r\n\r\n\t$ CFLAGS=\"-Ae -O\" ./configure --prefix=/usr/local ..........\r\n\r\n\r\n    File Hierarchy\r\n    --------------\r\n\r\n    Note that the path of the system wide odbc.ini file is calculated as\r\n    follows (based on flags to ./configure):\r\n\r\n   \tno --prefix\t\t\tdefault is /etc/odbc.ini\r\n\t--prefix=/usr\t\t\t/etc/odbc.ini\r\n\t--prefix=/xxx/yyy\t\t/xxx/yyy/etc/odbc.ini\r\n\t--sysconfdir=/xxx/yyy\t\t/xxx/yyy/odbc.ini\r\n\t--with-iodbc-inidir=/xxx/yyy\t/xxx/yyy/odbc.ini\r\n\r\n    If the `--with-layout=' option is set, then the prefix and\r\n    sysconfdir parameters will be changed accordingly. Currently, this\r\n    parameter understands values of `gentoo', `redhat', `gnu',\r\n    `debian' or `opt' (with everything going into /opt/iodbc/). If\r\n    both are specified, a --prefix argument will overrule a --with-layout.\r\n\r\n\r\n    Example\r\n    -------\r\n\r\n   \t$ ./configure --prefix=/usr/local --with-iodbc-inidir=/etc\r\n\t...\r\n\t...\r\n\t...\r\n\t$ make\r\n\t...\r\n\t...\r\n\t...\r\n\t$ su\r\n\t# make install\r\n\t...\r\n\t...\r\n\t...\r\n\r\n\r\n7. odbc.ini\r\n\r\n    Driver manager and drivers use odbc.ini file or connection string\r\n    when establishing a data source connection. On Windows, odbc.ini is\r\n    located in Windows directory.\r\n\r\n    On UNIX, the iODBC driver manager looks for the odbc.ini file in the\r\n    following sequence:\r\n\r\n\t1. check environment variable ODBCINI\r\n\r\n\t2. check $HOME/.odbc.ini\r\n\r\n\t3. check home in /etc/passwd and try .odbc.ini in there\r\n\r\n\t4. system-wide odbc.ini (settable at configuration time)\r\n\r\n\r\n    Item 1 is the easiest as most drivers will also look at this variable.\r\n\r\n\r\n\r\n    The format of odbc.ini( or ~/.odbc.ini ) is defined as:\r\n\r\n\todbc.ini\t  ::= data_source_list\r\n\r\n\tdata_source_list  ::= /* empty */\r\n\t\t\t   | data_source '\\n' data_source_list\r\n\r\n\tdata_source\t  ::= '[' data_source_name ']' '\\n' data_source_desc\r\n\r\n\tdata_source_name  ::= 'default' | [A-Za-z]*[A-Za-z0-9_]*\r\n\r\n\tdata_source_desc  ::= /* empty */\r\n\t\t\t   | attrib_desc '\\n' data_source_desc\r\n\r\n\taddrib_desc\t  ::= Attrib '=' attrib_value\r\n\r\n\tAttrib\t\t  ::= 'Driver' | 'PID' | 'UID' | driver_def_attrib\r\n\r\n\tdriver_def_attrib ::= [A-Za-z]*[A-Za-z0-9_]*\r\n\r\n\r\n\r\n    An example of an odbc.ini file:\r\n\r\n\t;\r\n\t;  odbc.ini\r\n\t;\r\n\t[ODBC Data Sources]\r\n\tMyodbc\t\t= Myodbc\r\n\tSample\t\t= OpenLink Generic ODBC Driver\r\n\tVirtuoso\t= Virtuoso\r\n\r\n\t[ODBC]\r\n\tTraceFile       = /tmp/odbc.trace\r\n\tTrace           = 0\t; set to 1 to enable tracing\r\n\r\n\t[Sample]\r\n\tDriver          = /usr/local/openlink/lib/oplodbc.so.1\r\n\tDescription     = Sample OpenLink DSN\r\n\tHost            = localhost\r\n\tUserName        = openlink\r\n\tPassword        = xxxx\r\n\tServerType      = Oracle 8.1.x\r\n\tDatabase        =\r\n\tFetchBufferSize = 99\r\n\tReadOnly        = no\r\n\r\n\t[Virtuoso]\r\n\tDriver\t\t= /usr/local/virtuoso/lib/virtodbc.so.1\r\n\tAddress\t\t= localhost:1112\r\n\tDatabase\t= Demo\r\n\r\n\t[Myodbc]\r\n\tDriver \t\t= /usr/lib/libmyodbc.so\r\n\tHOST   \t\t= localhost\r\n\r\n\t[Default]\r\n\tDriver \t\t= /usr/local/openlink/lib/oplodbc.so.1\r\n\r\n\r\n\r\n8. Tracing\r\n\r\n    iODBC driver manager traces driver's ODBC call invoked by the driver\r\n    manager. Default tracing file is ./odbc.log. Tracing option (i.e.\r\n    on/off or optional tracing file name) can be set in odbc.ini file\r\n    under the [ODBC] heading as:\r\n\r\n\t[ODBC]\r\n\tTraceFile = <optional_trace_file>\r\n\tTrace = ON | On | on | 1 | OFF | Off | off | 0\r\n\r\n    If <optional_trace_file> is stderr or stdout, i.e.\r\n\r\n        TraceFile = stderr\r\n\r\n    or\r\n\r\n\tTraceFile = stdout\r\n\r\n    the tracing message will go to the terminal screen (if it is available).\r\n\r\n\r\n9. Further Information Sources:\r\n\r\n   <http://www.iodbc.org/>\r\n\tiODBC project home page.\r\n\tBinaries, source, documentation\r\n\r\n   <http://sourceforge.net/projects/iodbc>\r\n\tSource, CVS tree, mailing lists, forums, bug reports\r\n\r\n   <http://www.openlinksw.com/>\r\n\tOpenLink Software.\r\n\tFree trials and support for OpenLink's ODBC drivers.\r\n\r\n   <http://www.microsoft.com/data/odbc/>\r\n\tMicrosoft's ODBC pages.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}